create table "ROOT".FILES
(
ID INTEGER not null primary key GENERATED ALWAYS AS IDENTITY(START
WITH 1, INCREMENT BY 1),
NAME VARCHAR(128) not null,
DATE DATE not null default CURRENT_DATE,
SIZE INTEGER,
TYPE VARCHAR(128) not null,
PATH VARCHAR(128),
CONSTRAINT unique_unik2 UNIQUE (NAME)
);
create table "ROOT".TAGS
(
ID INTEGER not null primary key GENERATED ALWAYS AS IDENTITY(START
WITH 1, INCREMENT BY 1),
NAME VARCHAR(128) not null,
CONSTRAINT unique_unik3 UNIQUE (NAME)
);
create table "ROOT".FILE_HAS_TAGS
(
FILE_ID INTEGER not null,
TAG_ID INTEGER not null,
CONSTRAINT unique_unik4 UNIQUE (FILE_ID, TAG_ID)
);
create table "ROOT".LINKED_FILES
(
FILE_A INTEGER not null,
FILE_B INTEGER not null,
CONSTRAINT unique_unik5 UNIQUE (FILE_A, FILE_B)
);
Alter Table ROOT.FILE_HAS_TAGS
add FOREIGN KEY (FILE_ID)
References ROOT.FILES (ID);
Alter Table ROOT.FILE_HAS_TAGS
add FOREIGN KEY (TAG_ID)
References ROOT.TAGS (ID);
Alter Table ROOT.LINKED_FILES
add FOREIGN KEY (FILE_A)
References ROOT.FILES (ID);
Alter Table ROOT.LINKED_FILES
add FOREIGN KEY (FILE_B)
References ROOT.FILES (ID);
